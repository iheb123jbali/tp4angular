{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class IhebComponent {\n  constructor(fb) {\n    this.fb = fb;\n    // Initialisez le FormGroup ici dans le constructeur\n    this.myForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  ngOnInit() {\n    // Vous pouvez laisser ngOnInit vide ou y ajouter d'autres initialisations\n  }\n  onSubmit() {\n    if (this.myForm.valid) {\n      console.log(this.myForm.value);\n    } else {\n      // Le formulaire n'est pas valide, vous pouvez gérer cela ici\n    }\n  }\n  static #_ = this.ɵfac = function IhebComponent_Factory(t) {\n    return new (t || IhebComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IhebComponent,\n    selectors: [[\"app-iheb\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function IhebComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function IhebComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵtext(11, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","IhebComponent","constructor","fb","myForm","group","username","required","minLength","email","password","ngOnInit","onSubmit","valid","console","log","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","IhebComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","IhebComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","invalid"],"sources":["C:\\Users\\ProBook 650\\tp4\\src\\app\\iheb\\iheb.component.ts","C:\\Users\\ProBook 650\\tp4\\src\\app\\iheb\\iheb.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-iheb',\n  templateUrl: './iheb.component.html',\n  styleUrls: ['./iheb.component.css']\n})\nexport class IhebComponent implements OnInit {\n  myForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    // Initialisez le FormGroup ici dans le constructeur\n    this.myForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  ngOnInit() {\n    // Vous pouvez laisser ngOnInit vide ou y ajouter d'autres initialisations\n  }\n\n  onSubmit() {\n    if (this.myForm.valid) {\n      console.log(this.myForm.value);\n    } else {\n      // Le formulaire n'est pas valide, vous pouvez gérer cela ici\n    }\n  }\n}\n","\n<form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n    <label for=\"username\">Username:</label>\n    <input type=\"text\" id=\"username\" formControlName=\"username\">\n  \n    <label for=\"email\">Email:</label>\n    <input type=\"text\" id=\"email\" formControlName=\"email\">\n  \n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\">\n  \n    <button type=\"submit\" [disabled]=\"myForm.invalid\">Submit</button>\n  </form>\n  \n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC1BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACN,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN;EAAA;EAGFC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,MAAM,CAACS,KAAK,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,MAAM,CAACY,KAAK,CAAC;KAC/B,MAAM;MACL;IAAA;EAEJ;EAAC,QAAAC,CAAA,G;qBAtBUhB,aAAa,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbrB,aAAa;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP1BX,EAAA,CAAAa,cAAA,cAAmD;QAAxBb,EAAA,CAAAc,UAAA,sBAAAC,gDAAA;UAAA,OAAYH,GAAA,CAAAlB,QAAA,EAAU;QAAA,EAAC;QAC9CM,EAAA,CAAAa,cAAA,eAAsB;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAA4D;QAE5DlB,EAAA,CAAAa,cAAA,eAAmB;QAAAb,EAAA,CAAAgB,MAAA,aAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACjCjB,EAAA,CAAAkB,SAAA,eAAsD;QAEtDlB,EAAA,CAAAa,cAAA,eAAsB;QAAAb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACvCjB,EAAA,CAAAkB,SAAA,eAAgE;QAEhElB,EAAA,CAAAa,cAAA,iBAAkD;QAAAb,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAV/DjB,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAA1B,MAAA,CAAoB;QAUAc,EAAA,CAAAoB,SAAA,IAA2B;QAA3BpB,EAAA,CAAAmB,UAAA,aAAAP,GAAA,CAAA1B,MAAA,CAAAmC,OAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}